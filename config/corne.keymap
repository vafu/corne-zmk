#include "zmk-helpers/key-labels/42.h"
#include <behaviors/num_word.dtsi>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2250
#define U_MOUSE_MOVE_EXPONENT 2
#define U_MOUSE_MOVE_TIME 650
#define U_MOUSE_MOVE_DELAY 0
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define U_MOUSE_SCROLL_EXPONENT 1
#define U_MOUSE_SCROLL_TIME 5000
#define U_MOUSE_SCROLL_DELAY 0

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150

/ {
    etch_y: etch_y {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&mmv MOVE_UP>, <&mmv MOVE_DOWN>;

        tap-ms = <50>;
    };

    etch_x: etch_x {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;

        tap-ms = <50>;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;

            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <50>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&none  &kp Q         &kp W          &kp E         &kp R                &kp T           &kp Y        &kp U                &kp I               &kp O          &kp P            &none
&none  &hm_l LGUI A  &hm_l LCTRL S  &hm_l LALT D  &hm_shift_l LSHFT F  &kp G           &kp H        &hm_shift_r RSHFT J  &hm_r RIGHT_ALT K   &hm_r RCTRL L  &hm_r RGUI SEMI  &none
&none  &kp Z         &kp X          &kp C         &kp V                &kp B           &kp N        &kp M                &kp COMMA           &kp DOT        &kp FSLH         &none
                                    &mo 5         &lt 1 SPACE          &lt 4 ESCAPE    &lt 4 ENTER  &lt 2 BSPC           &lt 6 LOCKING_CAPS
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        lower_layer {
            display-name = "symbol";
            bindings = <
&trans  &kp LBKT         &kp RBKT           &kp LPAR             &kp RPAR                 &kp DOLLAR    &kp GRAVE      &kp EXCL                         &kp QUESTION             &kp PERCENT     &kp POUND         &trans
&trans  &hm_l LGUI AMPS  &hm_l LCTRL EQUAL  &hm_l LEFT_ALT LBRC  &hm_shift_l LSHIFT RBRC  &kp MINUS     &kp UNDER      &hm_shift_r RSHFT DOUBLE_QUOTES  &hm_r RALT SINGLE_QUOTE  &hm_r RCTRL AT  &hm_r RGUI COLON  &trans
&trans  &kp PIPE         &kp ASTRK          &kp LESS_THAN        &kp GREATER_THAN         &kp PLUS      &kp BACKSLASH  &kp CARET                        &kp TILDE                &trans          &kp TILDE         &trans
                                            &trans               &trans                   &trans        &kp TAB        &kp BACKSPACE                    &kp DEL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "control";
            bindings = <
&trans  &trans      &trans     &trans        &kp F11      &kp F12    &kp PG_UP      &kp CARET       &kp DOLLAR       &kp LC(O)             &kp LC(I)              &none
&trans  &kp LGUI    &kp LCTRL  &kp LEFT_ALT  &kp LSHIFT   &trans     &kp LEFT       &kp DOWN        &kp UP           &kp RIGHT             &kp LC(CARET)          &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY    &kp K_PASTE  &trans     &kp PAGE_DOWN  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LC(LEFT_BRACKET)  &kp LC(RIGHT_BRACKET)  &trans
                               &trans        &trans       &trans     &trans         &trans          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN UP_ARROW>,
                <&inc_dec_kp LEFT RIGHT>;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                        &none         &none         &none           &none  &none  &none
            >;
        };

        number {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp SLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;

            label = "number";
        };

        mouse {
            bindings = <
&none  &none     &none      &none         &none      &none    &msc SCRL_UP    &none           &mmv MOVE_UP     &none            &none         &none
&none  &kp LGUI  &kp LCTRL  &kp LEFT_ALT  &kp LSHFT  &none    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &mmv MOVE_UP  &none
&none  &none     &none      &none         &none      &none    &none           &msc SCRL_LEFT  &msc SCRL_RIGHT  &none            &none         &none
                            &none         &none      &none    &mkp LCLK       &mkp MCLK       &mkp RCLK
            >;

            sensor-bindings = <&etch_y>, <&etch_x>;

            label = "Mouse";
        };

        WM {
            bindings = <
&trans  &trans    &trans     &trans        &trans      &trans    &trans  &kp LG(N7)        &kp LG(N8)        &kp LG(N9)        &trans  &trans
&trans  &kp LCMD  &kp LCTRL  &kp LEFT_ALT  &kp LSHIFT  &trans    &trans  &kp LG(NUMBER_4)  &kp LG(N5)        &kp LG(NUMBER_6)  &trans  &trans
&trans  &trans    &trans     &trans        &trans      &trans    &trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans  &trans
                             &trans        &trans      &trans    &trans  &trans            &trans
            >;

            label = "WM";
        };
    };
};
